apply plugin: 'groovy'
apply plugin: 'spring-boot'
//apply plugin: 'pkg-debian'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/gesellix/gradle-plugins"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.1.3.RELEASE"
        classpath "de.gesellix:gradle-debian-plugin:14"
    }
}

jar.baseName = "user-microservice"

mainClassName = "io.github.zutherb.appstash.shop.service.user.Boot"

idea {
    module {
        name='user-microservice'
    }
}

configurations {
    all*.exclude group: 'org.springframework.security'
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/groovy'
            srcDir 'src/main/resources'
        }
    }
    test {
        resources {
            srcDir 'src/test/groovy'
        }
    }
}


dependencies {
    compile commonDeps
    compile mongoDeps
    compile springDeps
    compile jacksonDeps
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.hateoas:spring-hateoas")

    compile("de.codecentric:spring-boot-starter-admin-client:$springBootAdminVersion")

    testCompile testDeps
}

def debName = jar.baseName
//debian {
//    packagename = debName
//    publications = []
//    controlDirectory = "${projectDir}/debian/control"
//    changelogFile = "${projectDir}/debian/changelog"
//    outputFile = "${buildDir}/${debName}_${version}_all.deb"
//
//    data {
//        dir {
//            name = "${projectDir}/debian/data"
//            excludes = ["**/.DS_Store"]
//        }
//    }
//}

jar {
    def manifestClasspath = configurations.compile.collect { it.getName() }.join(',')
    def cmd = "git rev-parse HEAD"
    def proc = cmd.execute()
    manifest {
        attributes("Manifest-Version"       : "1.0",
                "Created-By"             : vendor,
                "Specification-Title"    : appName,
                "Specification-Version"  : version,
                "Specification-Vendor"   : vendor,
                "Implementation-Title"   : appName,
                "Implementation-Version" : version,
                "Implementation-Vendor"  : vendor,
                "Git-Revision"           : proc.text.trim(),
                "Build"                  : "${System.getenv("JOB_NAME")}",
                "Build-Number"           : "${System.getenv("BUILD_NUMBER")}",
                "Class-Path"             : manifestClasspath)
    }
}